var data = {lines:[
{"lineNum":"    1","line":"import testbase","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    2","line":"import os","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    3","line":"import unittest","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    4","line":"import parse_cobertura","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"class BashBase(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    7","line":"    def doTest(self, args):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    8","line":"        self.setUp()"},
{"lineNum":"    9","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/shell-main \" + args)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"        return parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"class bash_coverage(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   14","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   15","line":"        self.setUp()"},
{"lineNum":"   16","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/shell-main\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   19","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 3) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   20","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 4) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   21","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 13) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   22","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 26) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   23","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 30) == 5","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   24","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 34) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   25","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 38) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   26","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 5) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"        assert parse_cobertura.hitsPerLine(dom, \"short-test.sh\", 5) == 11","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   29","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 128) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   30","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 132) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   31","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 135) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   32","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 136) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"        assert o.find(\"I\'m echoing to stderr via some\") != -1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"# Very limited, will expand once it\'s working better"},
{"lineNum":"   38","line":"class bash_coverage_debug_trap(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   39","line":"    @unittest.expectedFailure","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   40","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   41","line":"        self.setUp()"},
{"lineNum":"   42","line":"        rv,o = self.do(testbase.kcov + \" --bash-method=DEBUG \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/shell-main 5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   45","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 3) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   46","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 4) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   47","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 22) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"class bash_short_file(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   50","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   51","line":"        self.setUp()"},
{"lineNum":"   52","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/short-test.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/short-test.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   55","line":"        assert parse_cobertura.hitsPerLine(dom, \"short-test.sh\", 5) == 11","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"class bash_heredoc_backslashes(BashBase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   58","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   59","line":"        dom = self.doTest(\"5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 52) == 4","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   62","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 53) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   63","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 55) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   64","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 59) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   65","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 61) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   66","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 62) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"class bash_heredoc_special_cases_issue_44(BashBase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   69","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   70","line":"        dom = self.doTest(\"\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   71","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 77) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   72","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 83) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   73","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 88) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   74","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 93) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   75","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 109) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   76","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 118) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"class bash_non_empty_braces(BashBase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   79","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   80","line":"        dom = self.doTest(\"\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   81","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 102) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   82","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 103) == 3","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"class bash_coverage_tricky(BashBase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   85","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   86","line":"        dom = self.doTest(\"5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   87","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 36) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   88","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 44) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   89","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 7) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"class bash_honor_signal(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   92","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   93","line":"        self.setUp()"},
{"lineNum":"   94","line":"        rv,o = self.do(testbase.sources + \"/tests/setpgid-kill/test-script.sh \" + testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/trap.sh\", False)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/trap.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   97","line":"        assert parse_cobertura.hitsPerLine(dom, \"trap.sh\", 5) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"class bash_accumulate_data(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  100","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  101","line":"        self.setUp()"},
{"lineNum":"  102","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/unitundertest.sh 1\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/unitundertest.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  105","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 6) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  106","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 16) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  107","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/unitundertest.sh 2\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/unitundertest.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  110","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 6) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  111","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 16) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"class bash_accumulate_changed_data(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  114","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  115","line":"        self.setUp()"},
{"lineNum":"  116","line":"        os.system(\"mkdir -p /tmp/test-kcov\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  117","line":"        os.system(\"cp \" + testbase.sources + \"/tests/bash/shell-main /tmp/test-kcov\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  118","line":"        os.system(\"cp \" + testbase.sources + \"/tests/bash/other.sh /tmp/test-kcov\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  119","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov /tmp/test-kcov/shell-main 5 9\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  120","line":""},
{"lineNum":"  121","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  122","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 40) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  123","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 67) == 2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  124","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 6) == 2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  125","line":"        os.system(\"echo \\\"echo \'arne-anka\'\\\" >> /tmp/test-kcov/shell-main\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  126","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov /tmp/test-kcov/shell-main 5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  129","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 40) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  130","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 67) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  131","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 6) == 3","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"class bash_merge_data_issue_38(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  134","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  135","line":"        self.setUp()"},
{"lineNum":"  136","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/unitundertest.sh 1\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/unitundertest.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  139","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 6) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  140","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 16) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  141","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/unitundertest.sh 2\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/unitundertest.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  144","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 6) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  145","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 16) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  146","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/unitundertest.sh all\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/unitundertest.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  149","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 36) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  150","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 30) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  151","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 33) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  152","line":"        assert parse_cobertura.hitsPerLine(dom, \"unitundertest.sh\", 36) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  153","line":""},
{"lineNum":"  154","line":"class bash_issue_116_arithmetic_and_heredoc_issue_117_comment_within_string(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  155","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  156","line":"        self.setUp()"},
{"lineNum":"  157","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/shell-main\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  160","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 142) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  161","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 149) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  162","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 151) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  163","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 152) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"class bash_multiline_quotes(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  166","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  167","line":"        self.setUp()"},
{"lineNum":"  168","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/multiline-alias.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"        assert o.find(\"echo called test_alias\") == -1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  171","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/multiline-alias.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  172","line":"        assert parse_cobertura.hitsPerLine(dom, \"multiline-alias.sh\", 6) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"class bash_multiline_backslashes(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  175","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  176","line":"        self.setUp()"},
{"lineNum":"  177","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/multiline-backslash.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"        assert o.find(\"function_name\") == -1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"class bash_no_executed_lines(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  182","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  183","line":"        self.setUp()"},
{"lineNum":"  184","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/no-executed-statements.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  185","line":""},
{"lineNum":"  186","line":"        assert o.find(\"echo called test_alias\") == -1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  187","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/no-executed-statements.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  188","line":"        assert parse_cobertura.hitsPerLine(dom, \"no-executed-statements.sh\", 4) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"class bash_stderr_redirection(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  191","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  192","line":"        self.setUp()"},
{"lineNum":"  193","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/redirect-stderr.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"        assert o.find(\"kcov\") == -1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  196","line":"        rv,o = self.do(testbase.kcov + \" --debug-force-bash-stderr \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/redirect-stderr.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  197","line":"        assert o.find(\"kcov\") == -1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"class bash_dollar_var_replacement(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  200","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  201","line":"        self.setUp()"},
{"lineNum":"  202","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/dollar-var-replacements.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  203","line":""},
{"lineNum":"  204","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/dollar-var-replacements.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  205","line":"        assert parse_cobertura.hitsPerLine(dom, \"dollar-var-replacements.sh\", 2) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  206","line":"        assert parse_cobertura.hitsPerLine(dom, \"dollar-var-replacements.sh\", 4) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  207","line":"        assert parse_cobertura.hitsPerLine(dom, \"dollar-var-replacements.sh\", 5) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  208","line":""},
{"lineNum":"  209","line":"# Issue #152"},
{"lineNum":"  210","line":"class bash_done_eof(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  211","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  212","line":"        self.setUp()"},
{"lineNum":"  213","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/shell-main 5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  214","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  215","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 163) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  216","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 169) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  217","line":""},
{"lineNum":"  218","line":"# Issue #154"},
{"lineNum":"  219","line":"class bash_eof_backtick(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  220","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  221","line":"        self.setUp()"},
{"lineNum":"  222","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/shell-main\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  223","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/shell-main/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  224","line":"        assert parse_cobertura.hitsPerLine(dom, \"shell-main\", 180) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  225","line":""},
{"lineNum":"  226","line":"class bash_subshell(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  227","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  228","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/subshell.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  229","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/subshell.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  230","line":"        self.assertIsNone(parse_cobertura.hitsPerLine(dom, \"subshell.sh\", 1))","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  231","line":"        self.assertEqual(2, parse_cobertura.hitsPerLine(dom, \"subshell.sh\", 4))","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  232","line":"        self.assertEqual(0, parse_cobertura.hitsPerLine(dom, \"subshell.sh\", 8))","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  233","line":""},
{"lineNum":"  234","line":"class bash_handle_all_output(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  235","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  236","line":"        script = \"handle-all-output.sh\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  237","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" +","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  238","line":"            testbase.sources + \"/tests/bash/\" + script,","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  239","line":"            timeout=5.0)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  240","line":"        self.assertEqual(0, rv, \"kcov exited unsuccessfully\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  241","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/\" + script + \"/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  242","line":"        self.assertIsNone(parse_cobertura.hitsPerLine(dom, script, 1))","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  243","line":"        self.assertEqual(1000, parse_cobertura.hitsPerLine(dom, script, 4))","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  244","line":""},
{"lineNum":"  245","line":"class bash_exit_status(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  246","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  247","line":"        self.setUp()"},
{"lineNum":"  248","line":"        noKcovRv,o = self.do(testbase.sources + \"/tests/bash/shell-main 5\", False)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  249","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/shell-main 5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"        assert rv == noKcovRv","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  252","line":""},
{"lineNum":"  253","line":"# Issue 180"},
{"lineNum":"  254","line":"class bash_ignore_uncovered(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  255","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  256","line":"        self.setUp()"},
{"lineNum":"  257","line":"        rv,o = self.do(testbase.kcov + \" --exclude-region=CUSTOM_RANGE_START:CUSTOM_RANGE_END \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/other.sh\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  258","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/other.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  259","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 22) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  260","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 23) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 26) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  263","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 27) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  264","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 28) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  265","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 29) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 32) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  268","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 34) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  269","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 35) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  270","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 36) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  271","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 37) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  272","line":""},
{"lineNum":"  273","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 40) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  274","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 42) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  275","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 43) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  276","line":""},
{"lineNum":"  277","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 47) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  278","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 48) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  279","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 49) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  280","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 51) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  281","line":""},
{"lineNum":"  282","line":"# Issue #224"},
{"lineNum":"  283","line":"class bash_can_find_non_executed_scripts(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  284","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  285","line":"        self.setUp()"},
{"lineNum":"  286","line":"        rv,o = self.do(testbase.kcov + \" \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/first-dir/a.sh 5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  287","line":""},
{"lineNum":"  288","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/a.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  289","line":"        assert parse_cobertura.hitsPerLine(dom, \"a.sh\", 5) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  290","line":"        # Not executed"},
{"lineNum":"  291","line":"        assert parse_cobertura.hitsPerLine(dom, \"c.sh\", 3) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  292","line":""},
{"lineNum":"  293","line":"class bash_can_find_non_executed_scripts_manually(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  294","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  295","line":"        self.setUp()"},
{"lineNum":"  296","line":"        rv,o = self.do(testbase.kcov + \" --bash-parse-files-in-dir=\" + testbase.sources + \"/tests/bash \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/first-dir/a.sh 5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  297","line":""},
{"lineNum":"  298","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/a.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  299","line":"        # Not executed"},
{"lineNum":"  300","line":"        assert parse_cobertura.hitsPerLine(dom, \"c.sh\", 3) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  301","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 3) == 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"class bash_can_ignore_non_executed_scripts(testbase.KcovTestCase):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  304","line":"    def runTest(self):","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  305","line":"        self.setUp()"},
{"lineNum":"  306","line":"        rv,o = self.do(testbase.kcov + \" --bash-dont-parse-binary-dir \" + testbase.outbase + \"/kcov \" + testbase.sources + \"/tests/bash/first-dir/a.sh 5\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  307","line":""},
{"lineNum":"  308","line":"        dom = parse_cobertura.parseFile(testbase.outbase + \"/kcov/a.sh/cobertura.xml\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  309","line":"        assert parse_cobertura.hitsPerLine(dom, \"a.sh\", 5) == 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  310","line":"        # Not included in report"},
{"lineNum":"  311","line":"        assert parse_cobertura.hitsPerLine(dom, \"c.sh\", 3) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  312","line":"        assert parse_cobertura.hitsPerLine(dom, \"other.sh\", 3) == None","class":"lineNoCov","hits":"0","possible_hits":"0",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "foobar.sh", "date" : "2018-06-08 06:28:55", "instrumented" : 226, "covered" : 0,};
var merged_data = [];
